{"version":3,"sources":["components/container/Container.js","components/FeedbackOptions/FeedbackOptions.js","components/FeedbackOptions/Notification.js","components/FeedbackOptions/Section.js","components/FeedbackOptions/Statistics .js","App.js","index.js","components/container/Container.module.css"],"names":["Container","children","className","s","container","FeedbackOptions","onIncrementGood","onIncrementNeutral","onIncrementBad","type","onClick","Notification","message","Section","title","Statistics","good","neutral","bad","total","percent","App","state","props","initialValue","visible","show","setState","incrementGood","countTotalFeedback","countPositiveFeedbackPercentage","incrementNeutral","incrementBad","Math","round","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6RAMeA,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,KCC1BI,G,MAAkB,SAAC,GAIzB,IAHLC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,eAEA,OACE,gCAEE,wBAAQC,KAAK,SAASC,QAASJ,EAA/B,kBAGA,wBAAQG,KAAK,SAASC,QAASH,EAA/B,qBAGA,wBAAQE,KAAK,SAASC,QAASF,EAA/B,sBClBOG,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mCAAG,4BAAIA,OCAvCC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOb,EAAe,EAAfA,SAC/B,OACE,qCACGa,GAAS,6BAAKA,IACdb,MCFMc,EAAa,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACtD,OACE,qCAEE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,EAAT,OACA,wCAAWC,EAAX,OACA,oDAAuBC,EAAvB,YCHAC,E,4MAKJC,MAAQ,CACNN,KAAM,EAAKO,MAAMC,aACjBP,QAAS,EAAKM,MAAMC,aACpBN,IAAK,EAAKK,MAAMC,aAChBL,MAAO,EAAKI,MAAMC,aAClBJ,QAAS,EAAKG,MAAMC,aACpBC,SAAS,G,EAGXC,KAAO,WACL,EAAKC,SAAS,CAAEF,SAAS,K,EAG3BG,cAAgB,WACd,EAAKD,UAAS,kBAAe,CAC3BX,KADY,EAAGA,KACF,MAEf,EAAKa,qBACL,EAAKC,kCACL,EAAKJ,Q,EAGPK,iBAAmB,WACjB,EAAKJ,UAAS,kBAAkB,CAC9BV,QADY,EAAGA,QACI,MAErB,EAAKY,qBACL,EAAKC,kCACL,EAAKJ,Q,EAGPM,aAAe,WACb,EAAKL,UAAS,kBAAc,CAC1BT,IADY,EAAGA,IACJ,MAEb,EAAKW,qBACL,EAAKC,kCACL,EAAKJ,Q,EAGPG,mBAAqB,WACnB,EAAKF,UAAS,kBAAgB,CAC5BR,MADY,EAAGA,MACA,O,EAInBW,gCAAkC,WAChC,EAAKH,UAAS,gBAAGX,EAAH,EAAGA,KAAMG,EAAT,EAASA,MAAT,MAAsB,CAClCC,QAASa,KAAKC,MAAc,IAAPlB,EAAcG,Q,4CAIvC,WACE,MAAwDgB,KAAKb,MAArDN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,QAASK,EAA5C,EAA4CA,QAC5C,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASX,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,gBAAiB6B,KAAKP,cACtBrB,mBAAoB4B,KAAKJ,iBACzBvB,eAAgB2B,KAAKH,iBAIzB,cAAC,EAAD,CAASlB,MAAM,aAAf,SACGW,EACC,cAAC,EAAD,CACET,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,QAASA,IAGX,cAAC,EAAD,CAAcR,QAAQ,kC,GA/EhBwB,aAAZf,EACGgB,aAAe,CACpBb,aAAc,GAqFHH,QCzFfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.0f8ab67f.chunk.js","sourcesContent":["import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","// import { Component } from 'react'\r\n// import { Statistics } from './Statistics '\r\nimport './FeedbackOptions.css'\r\n\r\nexport const FeedbackOptions = ({\r\n  onIncrementGood,\r\n  onIncrementNeutral,\r\n  onIncrementBad,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {/* <h2>Please leave feedback</h2> */}\r\n      <button type=\"button\" onClick={onIncrementGood}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" onClick={onIncrementNeutral}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" onClick={onIncrementBad}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\n// onIncrementGood,\r\n//   onIncrementNeutral,\r\n//   onIncrementBad,\r\n\r\n// export class FeedbackOptions extends Component {\r\n//   static defaultProps = {\r\n//     initialValue: 0,\r\n//   }\r\n\r\n//   state = {\r\n//     good: this.props.initialValue,\r\n//     neutral: this.props.initialValue,\r\n//     bad: this.props.initialValue,\r\n//     total: this.props.initialValue,\r\n//     percent: this.props.initialValue,\r\n//   }\r\n\r\n//   incrementGood = () => {\r\n//     this.setState(({ good }) => ({\r\n//       good: good + 1,\r\n//     }))\r\n//     this.countTotalFeedback()\r\n//     this.countPositiveFeedbackPercentage()\r\n//   }\r\n\r\n//   incrementNeutral = () => {\r\n//     this.setState(({ neutral }) => ({\r\n//       neutral: neutral + 1,\r\n//     }))\r\n//     this.countTotalFeedback()\r\n//     this.countPositiveFeedbackPercentage()\r\n//   }\r\n\r\n//   incrementBad = () => {\r\n//     this.setState(({ bad }) => ({\r\n//       bad: bad + 1,\r\n//     }))\r\n//     this.countTotalFeedback()\r\n//     this.countPositiveFeedbackPercentage()\r\n//   }\r\n\r\n//   countTotalFeedback = () => {\r\n//     this.setState(({ total }) => ({\r\n//       total: total + 1,\r\n//     }))\r\n//   }\r\n\r\n//   countPositiveFeedbackPercentage = () => {\r\n//     this.setState(({ good, total }) => ({\r\n//       percent: Math.round((good * 100) / total),\r\n//     }))\r\n//   }\r\n\r\n//   render() {\r\n//     const { good, neutral, bad, total, percent } = this.state\r\n\r\n//     return (\r\n//       <>\r\n//         <h2>Please leave feedback</h2>\r\n//         <button type=\"button\" onClick={this.incrementGood}>\r\n//           Good\r\n//         </button>\r\n//         <button type=\"button\" onClick={this.incrementNeutral}>\r\n//           Neutral\r\n//         </button>\r\n//         <button type=\"button\" onClick={this.incrementBad}>\r\n//           Bad\r\n//         </button>\r\n//         <Statistics\r\n//           good={good}\r\n//           neutral={neutral}\r\n//           bad={bad}\r\n//           total={total}\r\n//           percent={percent}\r\n//         />\r\n//       </>\r\n//     )\r\n//   }\r\n// }\r\n","export const Notification = ({ message }) => <>{<p>{message}</p>}</>\r\n","export const Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n","// import React from 'react'\r\n\r\nexport const Statistics = ({ good, neutral, bad, total, percent }) => {\r\n  return (\r\n    <>\r\n      {/* <h3>Statistics</h3> */}\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad} </p>\r\n      <p>Total: {total} </p>\r\n      <p>Positive feedbeck: {percent} %</p>\r\n    </>\r\n  )\r\n}\r\n","import { Component } from 'react'\nimport Container from './components/container/Container'\nimport { FeedbackOptions } from './components/FeedbackOptions/FeedbackOptions'\nimport { Notification } from './components/FeedbackOptions/Notification'\nimport { Section } from './components/FeedbackOptions/Section'\nimport { Statistics } from './components/FeedbackOptions/Statistics '\n\nclass App extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  }\n\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n    total: this.props.initialValue,\n    percent: this.props.initialValue,\n    visible: false,\n  }\n\n  show = () => {\n    this.setState({ visible: true })\n  }\n\n  incrementGood = () => {\n    this.setState(({ good }) => ({\n      good: good + 1,\n    }))\n    this.countTotalFeedback()\n    this.countPositiveFeedbackPercentage()\n    this.show()\n  }\n\n  incrementNeutral = () => {\n    this.setState(({ neutral }) => ({\n      neutral: neutral + 1,\n    }))\n    this.countTotalFeedback()\n    this.countPositiveFeedbackPercentage()\n    this.show()\n  }\n\n  incrementBad = () => {\n    this.setState(({ bad }) => ({\n      bad: bad + 1,\n    }))\n    this.countTotalFeedback()\n    this.countPositiveFeedbackPercentage()\n    this.show()\n  }\n\n  countTotalFeedback = () => {\n    this.setState(({ total }) => ({\n      total: total + 1,\n    }))\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    this.setState(({ good, total }) => ({\n      percent: Math.round((good * 100) / total),\n    }))\n  }\n\n  render() {\n    const { good, neutral, bad, total, percent, visible } = this.state\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            onIncrementGood={this.incrementGood}\n            onIncrementNeutral={this.incrementNeutral}\n            onIncrementBad={this.incrementBad}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {visible ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              percent={percent}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </Container>\n    )\n  }\n}\n\nexport default App\n\n// const App = () => {\n//   return (\n//     <Container>\n//       <FeedbackOptions />\n//     </Container>\n//   )\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1CJKq\"};"],"sourceRoot":""}